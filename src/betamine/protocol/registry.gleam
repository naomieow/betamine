import betamine/protocol/decoder as encode
import gleam/bytes_builder
import gleam/io
import glisten.{type Connection}
import simplifile

pub fn send(connection: Connection(BitArray)) {
  let assert Ok(registries) =
    simplifile.read_directory("src/betamine/protocol/registries")
  // io.debug(registries)
  send_registry(connection, [
    "biome_registry.bin", "chat_type_registry.bin",
    "armor_trim_pattern_registry.bin", "armor_trim_material_registry.bin",
    "wolf_variant_registry.bin", "painting_variant_registry.bin",
    "dimension_registry.bin", "damage_type_registry.bin",
    // "banner_pattern_registry.bin", "enchantment_registry.bin",
  // "jukebox_registry.bin",
  // "item_registry.bin",
  ])
}

pub fn send_registry(
  connection: Connection(BitArray),
  registry_paths: List(String),
) {
  case registry_paths {
    [registry_path, ..registry_paths] -> {
      let assert Ok(registry) =
        simplifile.read_bits(
          "src/betamine/protocol/registries/" <> registry_path,
        )
      io.debug("REGISTRY:")
      io.debug(registry_path)
      io.debug(registry)
      let _ = glisten.send(connection, bytes_builder.from_bit_array(registry))
      send_registry(connection, registry_paths)
    }
    [] -> Nil
  }
}

pub fn serialize() {
  bytes_builder.from_bit_array(<<
    0x18, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x77, 0x6f,
    0x72, 0x6c, 0x64, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x69, 0x6f, 0x6d, 0x65, 0x40,
    0x12, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x62, 0x61,
    0x64, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x00, 0x17, 0x6d, 0x69, 0x6e, 0x65, 0x63,
    0x72, 0x61, 0x66, 0x74, 0x3a, 0x62, 0x61, 0x6d, 0x62, 0x6f, 0x6f, 0x5f, 0x6a,
    0x75, 0x6e, 0x67, 0x6c, 0x65, 0x00, 0x17, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72,
    0x61, 0x66, 0x74, 0x3a, 0x62, 0x61, 0x73, 0x61, 0x6c, 0x74, 0x5f, 0x64, 0x65,
    0x6c, 0x74, 0x61, 0x73, 0x00, 0x0f, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61,
    0x66, 0x74, 0x3a, 0x62, 0x65, 0x61, 0x63, 0x68, 0x00, 0x16, 0x6d, 0x69, 0x6e,
    0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x62, 0x69, 0x72, 0x63, 0x68, 0x5f,
    0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x00, 0x16, 0x6d, 0x69, 0x6e, 0x65, 0x63,
    0x72, 0x61, 0x66, 0x74, 0x3a, 0x63, 0x68, 0x65, 0x72, 0x72, 0x79, 0x5f, 0x67,
    0x72, 0x6f, 0x76, 0x65, 0x00, 0x14, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61,
    0x66, 0x74, 0x3a, 0x63, 0x6f, 0x6c, 0x64, 0x5f, 0x6f, 0x63, 0x65, 0x61, 0x6e,
    0x00, 0x18, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x63,
    0x72, 0x69, 0x6d, 0x73, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74,
    0x00, 0x15, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x64,
    0x61, 0x72, 0x6b, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x00, 0x19, 0x6d,
    0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x64, 0x65, 0x65, 0x70,
    0x5f, 0x63, 0x6f, 0x6c, 0x64, 0x5f, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x00, 0x13,
    0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x64, 0x65, 0x65,
    0x70, 0x5f, 0x64, 0x61, 0x72, 0x6b, 0x00, 0x1b, 0x6d, 0x69, 0x6e, 0x65, 0x63,
    0x72, 0x61, 0x66, 0x74, 0x3a, 0x64, 0x65, 0x65, 0x70, 0x5f, 0x66, 0x72, 0x6f,
    0x7a, 0x65, 0x6e, 0x5f, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x00, 0x1d, 0x6d, 0x69,
    0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x64, 0x65, 0x65, 0x70, 0x5f,
    0x6c, 0x75, 0x6b, 0x65, 0x77, 0x61, 0x72, 0x6d, 0x5f, 0x6f, 0x63, 0x65, 0x61,
    0x6e, 0x00, 0x14, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a,
    0x64, 0x65, 0x65, 0x70, 0x5f, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x00, 0x10, 0x6d,
    0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x64, 0x65, 0x73, 0x65,
    0x72, 0x74, 0x00, 0x19, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74,
    0x3a, 0x64, 0x72, 0x69, 0x70, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x61,
    0x76, 0x65, 0x73, 0x00, 0x15, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66,
    0x74, 0x3a, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x72, 0x65, 0x6e, 0x73,
    0x00, 0x17, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x65,
    0x6e, 0x64, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x00,
    0x16, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x65, 0x6e,
    0x64, 0x5f, 0x6d, 0x69, 0x64, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x00, 0x19, 0x6d,
    0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x65, 0x72, 0x6f, 0x64,
    0x65, 0x64, 0x5f, 0x62, 0x61, 0x64, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x00, 0x17,
    0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x66, 0x6c, 0x6f,
    0x77, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x00, 0x10, 0x6d,
    0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x66, 0x6f, 0x72, 0x65,
    0x73, 0x74, 0x00, 0x16, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74,
    0x3a, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x6f, 0x63, 0x65, 0x61, 0x6e,
    0x00, 0x16, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x66,
    0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x70, 0x65, 0x61, 0x6b, 0x73, 0x00, 0x16,
    0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x66, 0x72, 0x6f,
    0x7a, 0x65, 0x6e, 0x5f, 0x72, 0x69, 0x76, 0x65, 0x72, 0x00, 0x0f, 0x6d, 0x69,
    0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x67, 0x72, 0x6f, 0x76, 0x65,
    0x00, 0x14, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x69,
    0x63, 0x65, 0x5f, 0x73, 0x70, 0x69, 0x6b, 0x65, 0x73, 0x00, 0x16, 0x6d, 0x69,
    0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x6a, 0x61, 0x67, 0x67, 0x65,
    0x64, 0x5f, 0x70, 0x65, 0x61, 0x6b, 0x73, 0x00, 0x10, 0x6d, 0x69, 0x6e, 0x65,
    0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x00,
    0x18, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x6c, 0x75,
    0x6b, 0x65, 0x77, 0x61, 0x72, 0x6d, 0x5f, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x00,
    0x14, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x6c, 0x75,
    0x73, 0x68, 0x5f, 0x63, 0x61, 0x76, 0x65, 0x73, 0x00, 0x18, 0x6d, 0x69, 0x6e,
    0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x6d, 0x61, 0x6e, 0x67, 0x72, 0x6f,
    0x76, 0x65, 0x5f, 0x73, 0x77, 0x61, 0x6d, 0x70, 0x00, 0x10, 0x6d, 0x69, 0x6e,
    0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x6d, 0x65, 0x61, 0x64, 0x6f, 0x77,
    0x00, 0x19, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x6d,
    0x75, 0x73, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
    0x73, 0x00, 0x17, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a,
    0x6e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x73, 0x74, 0x65, 0x73,
    0x00, 0x0f, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x6f,
    0x63, 0x65, 0x61, 0x6e, 0x00, 0x21, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61,
    0x66, 0x74, 0x3a, 0x6f, 0x6c, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68,
    0x5f, 0x62, 0x69, 0x72, 0x63, 0x68, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74,
    0x00, 0x1f, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x6f,
    0x6c, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x69, 0x6e,
    0x65, 0x5f, 0x74, 0x61, 0x69, 0x67, 0x61, 0x00, 0x21, 0x6d, 0x69, 0x6e, 0x65,
    0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x6f, 0x6c, 0x64, 0x5f, 0x67, 0x72, 0x6f,
    0x77, 0x74, 0x68, 0x5f, 0x73, 0x70, 0x72, 0x75, 0x63, 0x65, 0x5f, 0x74, 0x61,
    0x69, 0x67, 0x61, 0x00, 0x10, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66,
    0x74, 0x3a, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x73, 0x00, 0x0f, 0x6d, 0x69, 0x6e,
    0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x72, 0x69, 0x76, 0x65, 0x72, 0x00,
    0x11, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x73, 0x61,
    0x76, 0x61, 0x6e, 0x6e, 0x61, 0x00, 0x19, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72,
    0x61, 0x66, 0x74, 0x3a, 0x73, 0x61, 0x76, 0x61, 0x6e, 0x6e, 0x61, 0x5f, 0x70,
    0x6c, 0x61, 0x74, 0x65, 0x61, 0x75, 0x00, 0x1b, 0x6d, 0x69, 0x6e, 0x65, 0x63,
    0x72, 0x61, 0x66, 0x74, 0x3a, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x65, 0x6e,
    0x64, 0x5f, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x00, 0x15, 0x6d, 0x69,
    0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x73, 0x6e, 0x6f, 0x77, 0x79,
    0x5f, 0x62, 0x65, 0x61, 0x63, 0x68, 0x00, 0x16, 0x6d, 0x69, 0x6e, 0x65, 0x63,
    0x72, 0x61, 0x66, 0x74, 0x3a, 0x73, 0x6e, 0x6f, 0x77, 0x79, 0x5f, 0x70, 0x6c,
    0x61, 0x69, 0x6e, 0x73, 0x00, 0x16, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61,
    0x66, 0x74, 0x3a, 0x73, 0x6e, 0x6f, 0x77, 0x79, 0x5f, 0x73, 0x6c, 0x6f, 0x70,
    0x65, 0x73, 0x00, 0x15, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74,
    0x3a, 0x73, 0x6e, 0x6f, 0x77, 0x79, 0x5f, 0x74, 0x61, 0x69, 0x67, 0x61, 0x00,
    0x1a, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x73, 0x6f,
    0x75, 0x6c, 0x5f, 0x73, 0x61, 0x6e, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x6c, 0x65,
    0x79, 0x00, 0x17, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a,
    0x73, 0x70, 0x61, 0x72, 0x73, 0x65, 0x5f, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65,
    0x00, 0x15, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x73,
    0x74, 0x6f, 0x6e, 0x79, 0x5f, 0x70, 0x65, 0x61, 0x6b, 0x73, 0x00, 0x15, 0x6d,
    0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x73, 0x74, 0x6f, 0x6e,
    0x79, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x65, 0x00, 0x1a, 0x6d, 0x69, 0x6e, 0x65,
    0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x73, 0x75, 0x6e, 0x66, 0x6c, 0x6f, 0x77,
    0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x73, 0x00, 0x0f, 0x6d, 0x69,
    0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x73, 0x77, 0x61, 0x6d, 0x70,
    0x00, 0x0f, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x74,
    0x61, 0x69, 0x67, 0x61, 0x00, 0x11, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61,
    0x66, 0x74, 0x3a, 0x74, 0x68, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x00, 0x12, 0x6d,
    0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x74, 0x68, 0x65, 0x5f,
    0x76, 0x6f, 0x69, 0x64, 0x00, 0x14, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61,
    0x66, 0x74, 0x3a, 0x77, 0x61, 0x72, 0x6d, 0x5f, 0x6f, 0x63, 0x65, 0x61, 0x6e,
    0x00, 0x17, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x77,
    0x61, 0x72, 0x70, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x00,
    0x1a, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x77, 0x69,
    0x6e, 0x64, 0x73, 0x77, 0x65, 0x70, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73,
    0x74, 0x00, 0x22, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a,
    0x77, 0x69, 0x6e, 0x64, 0x73, 0x77, 0x65, 0x70, 0x74, 0x5f, 0x67, 0x72, 0x61,
    0x76, 0x65, 0x6c, 0x6c, 0x79, 0x5f, 0x68, 0x69, 0x6c, 0x6c, 0x73, 0x00, 0x19,
    0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x77, 0x69, 0x6e,
    0x64, 0x73, 0x77, 0x65, 0x70, 0x74, 0x5f, 0x68, 0x69, 0x6c, 0x6c, 0x73, 0x00,
    0x1b, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x77, 0x69,
    0x6e, 0x64, 0x73, 0x77, 0x65, 0x70, 0x74, 0x5f, 0x73, 0x61, 0x76, 0x61, 0x6e,
    0x6e, 0x61, 0x00, 0x19, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x72, 0x61, 0x66, 0x74,
    0x3a, 0x77, 0x6f, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x64, 0x6c, 0x61,
    0x6e, 0x64, 0x73, 0x00,
  >>)
  // bytes_builder.new()
  // // Registry Id
  // |> encode.identifier("minecraft", "dimension_type")
  // // Entry Count
  // |> encode.var_int(1)
  // // Entries
  // // Entry Id
  // |> encode.identifier("minecraft", "overworld")
  // // Has Data (Determines If Data Is Defined)
  // |> encode.bool(False)
  // // Data
  // // |> encode.something()
}
